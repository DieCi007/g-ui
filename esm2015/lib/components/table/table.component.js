import { Component, EventEmitter, Input, Output } from '@angular/core';
import { debounceTime, distinctUntilChanged, map, tap } from 'rxjs/operators';
import { FormBuilder } from '@angular/forms';
import { SortType } from './model';
import { BreakpointService } from '../../core/service/breakpoint.service';
export class TableComponent {
    constructor(bp, fb) {
        this.bp = bp;
        this.fb = fb;
        this.noDataMessage = 'No items to display';
        this.cardMode = false;
        this.maxHeightPC = '50rem';
        this.maxHeightMobile = '38rem';
        this.changeAtPx = 812;
        this.buttonHeaderName = 'Actions';
        this.headerColor = 'primary';
        this.hoverColor = 'secondary';
        this.filterable = false;
        this.buttonClick = new EventEmitter();
        this.sortChange = new EventEmitter();
        this.filterChange = new EventEmitter();
        this.mobileStyle = false;
        this.filterForm = this.fb.group({
            filter: ['']
        });
    }
    ngOnInit() {
        this.bp$ = this.bp.customMaxWidth(this.changeAtPx).pipe(distinctUntilChanged(), tap(bp => bp.matches ? this.mobileStyle = true :
            this.mobileStyle = false)).subscribe();
        this.filterSubscription = this.filterForm.valueChanges.pipe(map(r => r.filter), debounceTime(400), distinctUntilChanged(), tap(f => {
            if (this.filterable) {
                this.filterChange.emit(f);
            }
        })).subscribe();
    }
    ngOnDestroy() {
        this.bp$.unsubscribe();
        this.filterSubscription.unsubscribe();
    }
    activateAccordion(accordion) {
        var _a;
        if (((_a = this.expandedHeaderData) === null || _a === void 0 ? void 0 : _a.length) > 0) {
            if (accordion.style.display === 'table-cell') {
                accordion.style.display = 'none';
            }
            else {
                accordion.style.display = 'table-cell';
            }
        }
    }
    get allHeaderData() {
        let data = [...this.headerData];
        if (this.expandedHeaderData) {
            data = [...data, ...this.expandedHeaderData];
        }
        return data;
    }
    onButtonClick(event, id, el) {
        event.preventDefault();
        event.stopPropagation();
        this.buttonClick.emit({
            buttonId: id,
            rowData: el
        });
    }
    onSortChange(property) {
        var _a;
        if (property === ((_a = this.sort) === null || _a === void 0 ? void 0 : _a.field)) {
            return this.sortChange.emit({
                field: property,
                type: this.sort.type === SortType.ASC ? SortType.DESC : SortType.ASC
            });
        }
        this.sortChange.emit({
            field: property,
            type: SortType.ASC
        });
    }
}
TableComponent.decorators = [
    { type: Component, args: [{
                selector: 'g-table',
                template: "<div class=\"container\" [class.card]=\"cardMode\">\n  <div class=\"table-container\" [ngStyle]=\"{height: mobileStyle ? maxHeightMobile : maxHeightPC}\">\n    <table *ngIf=\"!mobileStyle else custom\">\n      <thead>\n      <tr *ngIf=\"filterable\" [ngClass]=\"{primary: headerColor==='primary', secondary: headerColor==='secondary'}\"\n          [ngStyle]=\"{backgroundColor:!['primary','secondary'].includes(headerColor) && headerColor}\">\n        <td class=\"filter-container\" [colSpan]=\"headerData?.length + 1\">\n          <g-input-field font=\"normal\" width=\"20rem\"\n                         [form]=\"filterForm\" controlName=\"filter\" label=\"Cerca...\"></g-input-field>\n        </td>\n      </tr>\n      <tr [ngClass]=\"{primary: headerColor==='primary', secondary: headerColor==='secondary'}\"\n          [ngStyle]=\"{backgroundColor:!['primary','secondary'].includes(headerColor) && headerColor}\">\n        <th *ngFor=\"let data of headerData\" (click)=\"onSortChange(data.property)\">{{data.name}}\n          <i class=\"sort-element pi {{sort && data.property === sort.field &&\n          sort.type === 'ASC' ? 'pi-sort-up' : 'pi-sort-down'}}\"\n             [class.active]=\"data.property === sort?.field\"></i></th>\n        <th>{{buttonData?.length > 0 ? buttonHeaderName : ''}}</th>\n      </tr>\n      </thead>\n      <tbody>\n      <ng-container *ngFor=\"let element of data\">\n        <tr [ngClass]=\"{primary: hoverColor==='primary', secondary: hoverColor==='secondary'}\"\n            (click)=\"activateAccordion(accordion)\">\n          <ng-container *ngFor=\"let hd of headerData\">\n            <td *ngIf=\"!hd.render else render\" [class.emphasized]=\"hd.isBold\">\n              {{hd.dateFormat ? (element[hd.property] | date: hd.dateFormat) : element[hd.property]}}\n            </td>\n            <ng-template #render>\n              <td [class.emphasized]=\"hd.isBold\" [innerHTML]=\"hd.render(element) | trustHtml\"></td>\n            </ng-template>\n          </ng-container>\n          <td>\n            <ng-container *ngFor=\"let btn of buttonData\">\n              <g-button [color]=\"btn.color==='primary'?'primary':'secondary'\" *ngIf=\"btn.type === 'LABELED' else icon\"\n                        [label]=\"btn.label\" (click)=\"onButtonClick($event, btn.id, element)\"\n                        [pTooltip]=\"btn.tooltip\" [showDelay]=\"500\" class=\"action\"></g-button>\n              <ng-template #icon>\n                <i [ngClass]=\"{primary: btn.color==='primary', secondary: btn.color==='secondary',\n              danger: btn.color === 'danger'}\"\n                   [ngStyle]=\"{color: !['primary','secondary','danger'].includes(btn.color) && btn.color}\"\n                   class=\"action pi {{btn.icon}}\" (click)=\"onButtonClick($event, btn.id, element)\"\n                   [pTooltip]=\"btn.tooltip\" [showDelay]=\"500\"></i></ng-template>\n            </ng-container>\n          </td>\n        </tr>\n        <tr>\n          <td class=\"accordion-data\" #accordion [colSpan]=\"headerData?.length\">\n            <div *ngFor=\"let ehd of expandedHeaderData\">\n              <span class=\"header-value\">{{ehd.name}}:</span>\n              <span class=\"spacer\"></span>\n              <span\n                class=\"body-value\">{{ehd.dateFormat ? (element[ehd.property] | date: ehd.dateFormat) : element[ehd.property]}}</span>\n            </div>\n          </td>\n        </tr>\n      </ng-container>\n      <ng-container *ngIf=\"data?.length < 1\">\n        <tr>\n          <td [colSpan]=\"headerData?.length + (buttonData?.length || 0)\"\n              style=\"text-align: center\">{{noDataMessage}}</td>\n        </tr>\n      </ng-container>\n      </tbody>\n    </table>\n\n    <ng-template #custom>\n      <div class=\"custom-table-filter\" *ngIf=\"filterable\"\n           [ngClass]=\"{primary: headerColor==='primary', secondary: headerColor==='secondary'}\"\n           [ngStyle]=\"{backgroundColor:!['primary','secondary'].includes(headerColor) && headerColor}\">\n        <g-input-field font=\"large\" width=\"20rem\"\n                       [form]=\"filterForm\" controlName=\"filter\" label=\"Cerca...\"></g-input-field>\n      </div>\n      <div class=\"custom-table\">\n        <div *ngFor=\"let element of data; index as i\" class=\"custom-table-row\"\n             [class.odd-row]=\"i % 2 === 0\">\n          <div *ngFor=\"let hd of allHeaderData\">\n            <span class=\"header-value\">{{hd.name}}:</span>\n            <span class=\"spacer\"></span>\n            <span class=\"body-value\"\n                  [class.emphasized]=\"hd.isBold\">{{hd.dateFormat ? (element[hd.property] | date: hd.dateFormat) : element[hd.property]}}</span>\n          </div>\n          <div *ngIf=\"buttonData?.length>0\">\n            <span class=\"header-value\">{{buttonHeaderName}}:</span>\n            <span class=\"spacer\"></span>\n            <ng-container *ngFor=\"let btn of buttonData\">\n              <g-button [color]=\"btn.color==='primary'?'primary':'secondary'\" *ngIf=\"btn.type === 'LABELED' else icon\"\n                        [label]=\"btn.label\" (click)=\"onButtonClick($event, btn.id, element)\"\n                        [pTooltip]=\"btn.tooltip\" [showDelay]=\"500\" class=\"action\"></g-button>\n              <ng-template #icon>\n                <i [ngClass]=\"{primary: btn.color==='primary', secondary: btn.color==='secondary',\n              danger: btn.color === 'danger'}\"\n                   [ngStyle]=\"{color: !['primary','secondary','danger'].includes(btn.color) && btn.color}\"\n                   class=\"action pi {{btn.icon}}\" (click)=\"onButtonClick($event, btn.id, element)\"\n                   [pTooltip]=\"btn.tooltip\" [showDelay]=\"500\"></i></ng-template>\n            </ng-container>\n          </div>\n        </div>\n      </div>\n      <ng-container *ngIf=\"data?.length < 1\">\n        <div style=\"text-align: center\">{{noDataMessage}}</div>\n      </ng-container>\n    </ng-template>\n  </div>\n</div>\n",
                styles: [":host{width:100%}.container{background-color:#f8f8ff;height:100%;width:100%}.container.card{box-shadow:0 2px 10px 0 rgba(0,0,0,.18);border-radius:20px;overflow:hidden}.container .table-container{overflow:auto;display:flex;flex-direction:column}.container .table-container table{border-collapse:collapse;position:relative;width:100%}.container .table-container table thead{position:sticky;top:0}.container .table-container table thead tr th{font-size:1.2rem;padding:.6rem .1rem;cursor:pointer}.container .table-container table thead tr th :not(.active).sort-element{display:none}.container .table-container table thead tr th:hover .sort-element{display:inline-block}.container .table-container table thead tr td.filter-container{padding:0 1rem}.container .table-container table thead tr.primary{background-color:#ffd54f}.container .table-container table thead tr.secondary{background-color:#4e342e;color:#fff}.container .table-container table tbody{border-left:5px solid transparent}.container .table-container table tbody tr{border-bottom:1px solid rgba(0,0,0,.1);cursor:pointer}.container .table-container table tbody tr.primary:hover{border-left:5px solid #ffd54f}.container .table-container table tbody tr.secondary:hover{border-left:5px solid #4e342e}.container .table-container table tbody tr td{padding:.5rem;text-align:center}.container .table-container table tbody tr td.emphasized{font-weight:500}.container .table-container table tbody tr td .action{margin:0 .3rem}.container .table-container table tbody tr td i{font-size:1.2rem}.container .table-container table tbody tr td i.primary{color:#ffd54f}.container .table-container table tbody tr td i.secondary{color:#4e342e}.container .table-container table tbody tr td i.danger{color:#d0021b}.container .table-container table tbody tr .accordion-data{display:none;-webkit-animation:fadeIn .8s;animation:fadeIn .8s;text-align:left}.container .table-container table tbody tr .accordion-data div .header-value{font-size:1.2rem;font-weight:700}.container .table-container table tbody tr .accordion-data div .spacer{padding-left:1rem}.container .table-container .custom-table-filter{width:100%}.container .table-container .custom-table-filter.primary{background-color:#ffd54f}.container .table-container .custom-table-filter.secondary{background-color:#4e342e}.container .table-container .custom-table{flex:1;overflow:auto}.container .table-container .custom-table .custom-table-row{padding:.5rem}.container .table-container .custom-table .custom-table-row.odd-row{background-color:rgba(255,213,79,.18823529411764706)}.container .table-container .custom-table .custom-table-row .header-value{font-size:1.2rem;font-weight:700}.container .table-container .custom-table .custom-table-row .spacer{padding-left:1rem}.container .table-container .custom-table .custom-table-row .body-value{font-size:1.1rem}.container .table-container .custom-table .custom-table-row .body-value.emphasized{font-weight:500}.container .table-container .custom-table .custom-table-row .action{margin:0 .3rem}.container .table-container .custom-table .custom-table-row i{font-size:1.2rem}.container .table-container .custom-table .custom-table-row i.primary{color:#ffd54f}.container .table-container .custom-table .custom-table-row i.secondary{color:#4e342e}.container .table-container .custom-table .custom-table-row i.danger{color:#d0021b}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}"]
            },] }
];
TableComponent.ctorParameters = () => [
    { type: BreakpointService },
    { type: FormBuilder }
];
TableComponent.propDecorators = {
    headerData: [{ type: Input }],
    expandedHeaderData: [{ type: Input }],
    buttonData: [{ type: Input }],
    data: [{ type: Input }],
    noDataMessage: [{ type: Input }],
    cardMode: [{ type: Input }],
    maxHeightPC: [{ type: Input }],
    maxHeightMobile: [{ type: Input }],
    changeAtPx: [{ type: Input }],
    buttonHeaderName: [{ type: Input }],
    headerColor: [{ type: Input }],
    hoverColor: [{ type: Input }],
    sort: [{ type: Input }],
    filterable: [{ type: Input }],
    buttonClick: [{ type: Output }],
    sortChange: [{ type: Output }],
    filterChange: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,